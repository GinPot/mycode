







===============================================================================================
static struct {
	seqcount_t		seq;																	//用来保护timekeeper的
	struct timekeeper	timekeeper;
} tk_core ____cacheline_aligned = {															//tk_core带有timekeeper结构体的全局变量
	.seq = SEQCNT_ZERO(tk_core.seq),
};
static DEFINE_RAW_SPINLOCK(timekeeper_lock);												//用来保护timekeeper的
static struct timekeeper shadow_timekeeper;													//更新系统时间时，先将时间调整值设定到shadow_timekeeper中，然后一次性的copy到真正的那个timekeeper，减少持有锁的时间


struct timekeeper {
	struct tk_read_base	tkr_mono;
		struct tk_read_base {
			struct clocksource	*clock;													//绑定的clocksource
			u64			mask;
			u64			cycle_last;
			u32			mult;															//cycle to ns参数
			u32			shift;
			u64			xtime_nsec;														//墙上时间ns
			ktime_t			base;
			u64			base_real;
		};

	u64			xtime_sec;																//墙上时间s
	unsigned long		ktime_sec;
	struct timespec64	wall_to_monotonic;												//monotonic clock到real time clock的偏移
	ktime_t			offs_real;
	ktime_t			offs_boot;															//记录系统boot time
	ktime_t			offs_tai;
	s32			tai_offset;																//原子钟类型的系统时钟
	unsigned int		clock_was_set_seq;

	u64			cycle_interval;															//NTP相关的成员
	u64			xtime_interval;
};




==========================

start_kernel()
	timekeeping_init()
		read_persistent_wall_and_boot_offset(&wall_time, &boot_offset)
			read_persistent_clock64(wall_time)															//architecture相关的函数,从系统中的HW clock（例如RTC）中获取时间信息,没有rtc的话默认设置为0
			*boot_offset = ns_to_timespec64(local_clock())												//默认启动时间为0s

		...																								//检测有效性、设置rtc是否存在等信息
		wall_to_mono = timespec64_sub(boot_offset, wall_time);											//wall time + wall_to_mono = boot time		0+(-300)=-300
		...
		clock = clocksource_default_clock()																//设置默认的clock source(jiffies)
		...
		tk_setup_internals(tk, clock)																	//建立default clocksource和timekeeping伙伴关系
		...
		tk_set_xtime(tk, &wall_time);																	//设置timekeeping里的墙上时间
		tk->raw_sec = 0;
		...
		tk_set_wall_to_mono(tk, wall_to_mono);

























