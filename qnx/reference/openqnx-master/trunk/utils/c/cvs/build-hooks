# qnx_target_version default: 6.4.0
# Can be overriden by VERSION_REL
# If native compiled on neutrino, it will be determined
# unless overriden by VERSION_REL environment variable.
qnx_target_version=6.4.0

if [ ! -z "${VERSION_REL}" ]; then
        qnx_target_version=${VERSION_REL}
#if target_version is 6.4.x then default to 6.4.0. We have the same
#toolchain for 6.4.x.
        case ${qnx_target_version} in
          6.4.*) qnx_target_version=6.4.0
          ;;
        esac
else
        if test "${SYSNAME}" = "${TARGET_SYSNAME}"; then
                qnx_target_version=$(uname -r)
        fi
fi

case ${cpu} in 
  x86) cpu_string=i386-pc
  ;;
  ppc) cpu_string=powerpc-unknown
  ;;
  *) cpu_string=${cpu}-unknown
  ;;
esac

target=${cpu_string}-nto-qnx${qnx_target_version}

function hook_preconfigure {
	configure_opts="${configure_opts} -C --prefix=$INSTALL_ROOT_nto/${cpudir}"
	if [ "${TARGET_SYSNAME}" == "linux" ] ; then 
		configure_opts="${configure_opts} --without-krb4"
		configure_opts="${configure_opts} --without-gssapi"
	fi

	if test "${TARGET_SYSNAME}" = nto -a "${SYSNAME}" != nto; then
	    export CONFIG_SITE="${PWD}/../nto-config.site"
	    configure_opts="${configure_opts} --target=${target}"
	    configure_opts="${configure_opts} --host=${target}"
	    configure_opts="${configure_opts} --with-editor=vi"
	fi
}

function hook_premake {
	strip_r_switch
}

function hook_pinfo {
    cd src
	gen_pinfo -e cvs usr/bin USE="%2>%C --help" "DESCRIPTION=The Concurrent Versions System" 
}
