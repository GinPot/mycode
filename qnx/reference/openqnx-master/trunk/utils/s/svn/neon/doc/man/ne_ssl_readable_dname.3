.\"     Title: ne_ssl_dname
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 20 August 2008
.\"    Manual: neon API reference
.\"    Source: neon 0.28.3
.\"
.TH "NE_SSL_DNAME" "3" "20 August 2008" "neon 0.28.3" "neon API reference"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
ne_ssl_readable_dname, ne_ssl_dname_cmp - SSL distinguished name handling
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <ne_ssl\.h>
.fi
.ft
.HP 34
.BI "const char *ne_ssl_readable_dname(const\ ne_ssl_dname\ *" "dname" ");"
.HP 21
.BI "int ne_ssl_dname_cmp(const\ ne_ssl_dname\ *" "dn1" ", const\ ne_ssl_dname\ *" "dn2" ");"
.SH "DESCRIPTION"
.PP
The
\fBne_ssl_readable_dname\fR
function creates a single\-line, human\-readable string out of an
\fBne_ssl_dname\fR
object\. The returned string is
\fBmalloc\fR()\-allocated, and must be
\fBfree\fR()d by the caller\.
.PP
The
\fBne_ssl_dname_cmp\fR
function compares two distinguished names, and returns zero if they are equal, or non\-zero otherwise\.
.SH "RETURN VALUE"
.PP
\fBne_ssl_readable_dname\fR
returns a
\fBmalloc\fR\-allocated string, and never
NULL\.
.SH "EXAMPLES"
.PP
See
ne_ssl_cert_subject
for an example use of
\fBne_ssl_readable_dname\fR\.
.SH "SEE ALSO"
.PP
ne_ssl_cert_subject
.SH "AUTHOR"
.PP
\fBJoe Orton\fR <\&neon@lists.manyfish.co.uk\&>
.sp -1n
.IP "" 4
Author.
.SH "COPYRIGHT"
